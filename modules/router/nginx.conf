user nginx;
worker_processes 1;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections 4096;
}

http {
  map_hash_bucket_size 512;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format routing '$ssl_session_id $cookie_danake_routing $time_iso8601';

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  sendfile on;

  resolver 127.0.0.11 ipv6=off;

  map $cookie_danake_routing $danake_uid {
    include /cookie2uid.map;
  }

  map $status $status_text {
    401 'accesso non autorizzato';
    403 'accesso non autorizzato';
    404 'indirizzo non valido';
    500 'errore interno';
    501 'servizio non implementato';
    502 'servizio non ancora attivo';
    503 'servizio non disponibile';
    default 'problema generico';
  }

  server {
    listen 80;
    listen [::]:80;
    server_name esami-01.esami.di.unimi.it;
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    include ssl.conf;

    access_log /logs/routing.log routing;
    access_log /var/log/nginx/access.log main;

    error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error.html;
    location = /error.html {
      ssi on;
      internal;
      auth_basic off;
      root /errors/;
    }

    location ~ ^/cs/ {
      rewrite ^/cs/(.*) /$1 break;
      proxy_buffering off;
      proxy_http_version 1.1;
      proxy_pass http://editor-$danake_uid:8080;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header X-Real-IP $remote_addr;
    }

    location ~ ^/da/ {
      #rewrite ^/da/(.*) /$1 break;
      proxy_buffering off;
      proxy_http_version 1.1;
      proxy_pass http://auth:8080;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header X-Real-IP $remote_addr;
    }

  }
}
