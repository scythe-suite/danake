version: "3.8"
services:

  router:
    image: "${DANAKE_REGISTRY}/router:${DANAKE_VERSION:-latest}"
    depends_on:
      - auth
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
    ports:
      - target: 80
        published: 80
      - target: 443
        published: 443
    volumes:
      - type: volume
        source: router_logs
        target: /logs
    networks:
      - editor_network
    secrets:
      - fullchain.pem
      - privkey.pem
      - dhparam.pem
      - source: cookie2uid.map
        target: /cookie2uid.map

  auth:
    image: "${DANAKE_REGISTRY}/auth:${DANAKE_VERSION:-latest}"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
    volumes:
      - type: volume
        source: auth_pictures
        target: /pictures
    networks:
      - editor_network
    configs:
      - source: uid2info.tsv
        target: /uid2info.tsv
    secrets:
      - source: auth-config.py
        target: /config.py
      - source: cookie2uid.map
        target: /cookie2uid.map

  mail:
    image: "${DANAKE_REGISTRY}/mail:${DANAKE_VERSION:-latest}"
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - editor_network
    secrets:
      - source: mail-config.py
        target: /config.py

  portainer:
    image: portainer/portainer
    depends_on:
      - agent
    command: -H tcp://tasks.agent:9001 --tlsskipverify --ssl --sslcert /run/secrets/fullchain.pem --sslkey /run/secrets/privkey.pem
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
    ports:
      - target: 8000 # ssh tunnel
        published: 8000
      - target: 9000
        published: 9000
    volumes:
      - type: volume
        source: portainer
        target: /data
    networks:
      - agent_network
    secrets:
      - fullchain.pem
      - privkey.pem

  agent:
    image: portainer/agent
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      - type: bind
        source: /var/lib/docker/volumes
        target: /var/lib/docker/volumes
    networks:
      - agent_network

networks:
  agent_network:
    driver: overlay
    attachable: true
  editor_network:
    driver: overlay
    attachable: true

volumes:
  auth_pictures:
  portainer:
  router_logs:

configs:
  uid2info.tsv:
    external: true
    name: danake_uid2info

secrets:
  fullchain.pem:
    external: true
    name: danake_fullchain
  privkey.pem:
    external: true
    name: danake_privkey
  dhparam.pem:
    external: true
    name: danake_dhparam
  auth-config.py:
    external: true
    name: danake_auth_config
  mail-config.py:
    external: true
    name: danake_mail_config
  cookie2uid.map:
    external: true
    name: danake_cookie2uid
