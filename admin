#!/bin/bash

export ADMIN_COMMAND="$1"
shift

if [ -z $DANAKE_DEBUG ]; then
  export DANAKE_REGISTRY="scythesuitedanake"
else
  export DANAKE_REGISTRY="127.0.0.1:5000"
fi

export DANAKE_UID=$(id -u)
export DANAKE_GID=$(id -g)

export DANAKE_VERSION="0.2.0-beta"
export DANAKE_CONFS="./confs" # must be relative
export DANAKE_DATA="./data" # must be relative

case "$ADMIN_COMMAND" in

    build)
      for img in $(ls modules); do
        docker build modules/$img \
          --tag "$DANAKE_REGISTRY/$img:latest" \
          --tag "$DANAKE_REGISTRY/$img:$DANAKE_VERSION"
      done
    ;;

    push)
      for img in $(ls modules); do
        docker push "$DANAKE_REGISTRY/$img:$DANAKE_VERSION"
        docker push "$DANAKE_REGISTRY/$img:latest"
      done
    ;;

    pull)
      for img in $(ls modules); do
        docker pull "$DANAKE_REGISTRY/$img:$DANAKE_VERSION"
      done
    ;;

    setup-dirs)
        mkdir -p ./data/{logs,pictures}
    ;;

    start-base)
      docker stack deploy -c base.yml base
    ;;

    open-monitor)
      if [ -z "$DOCKER_MACHINE_NAME" ]; then
        python -m webbrowser -n https://$(hostname):9000/
      else
        python -m webbrowser -n https://$(docker-machine ip danake-manager):9000/
      fi
    ;;

    stop-base)
      docker stack rm base
    ;;

    generate-cookies)
      # this ensure the file exits and hence will have the
      touch $(realpath "$DANAKE_CONFS")/cookie2uid.map
      docker run --rm \
        --mount type=bind,source=$(realpath "$DANAKE_CONFS"),target=/confs \
        $DANAKE_REGISTRY/cli:$DANAKE_VERSION generate-cookies
    ;;

    start)
      docker stack deploy -c danake.yml danake
    ;;

    stop)
      docker stack rm danake
    ;;

    start-editor)
      if [ -z "$DOCKER_MACHINE_NAME" ]; then
        docker run --rm \
          --mount type=bind,source=$(realpath "$DANAKE_CONFS"),target=/confs \
          --env DANAKE_REGISTRY \
          --env DANAKE_VERSION \
          --mount type=bind,source=/var/run/docker.sock,target=/var/run/docker.sock \
          $DANAKE_REGISTRY/cli:$DANAKE_VERSION start-editor
      else
        docker run --rm \
          --mount type=bind,source=$(realpath "$DANAKE_CONFS"),target=/confs \
          --env DANAKE_REGISTRY \
          --env DANAKE_VERSION \
          --env DOCKER_TLS_VERIFY \
          --env DOCKER_HOST \
          --env DOCKER_MACHINE_NAME \
          --env DOCKER_CERT_PATH=/certs \
          --mount type=bind,source="$DOCKER_CERT_PATH",target=/certs \
          $DANAKE_REGISTRY/cli:$DANAKE_VERSION start-editor
      fi
    ;;

    stop-editor)
      docker service rm $(docker service ls -q --filter label=danake=editor)
    ;;

    token)
        docker run --rm -it \
          -v $(pwd)/confs/uid2info.tsv:/app/instance/uid2info.tsv:ro \
          -v $(pwd)/confs/cookie2uid.tsv:/app/instance/cookie2uid.tsv:ro  \
          $DANAKE_REGISTRY/auth:$DANAKE_VERSION flask get-token "$1"
    ;;

    ufw)
        DANAKE_NETWORK="159.149.129.96/27"
        sudo ufw allow proto tcp from ${DANAKE_NETWORK} to any port 2377
        sudo ufw allow proto tcp from ${DANAKE_NETWORK} to any port 7946
        sudo ufw allow proto udp from ${DANAKE_NETWORK} to any port 7946
        sudo ufw allow proto udp from ${DANAKE_NETWORK} to any port 4789
    ;;

    dm-create-vms)
      for vm in manager worker0 worker1; do
          docker-machine rm danake-$vm
          docker-machine create danake-$vm
      done
      docker-machine ssh danake-manager mkdir -p /home/docker/data
    ;;

    dm-setup-swarm)
      MANAGER_IP=$(docker-machine ip danake-manager)
      docker-machine ssh danake-manager docker swarm init --advertise-addr $MANAGER_IP
      JOIN_CMD=$(docker-machine ssh danake-manager docker swarm join-token  worker | grep 'docker swarm join')
      for vm in worker0 worker1; do
        docker-machine ssh danake-$vm $JOIN_CMD
      done
      docker-machine ssh danake-manager docker node ls
    ;;

    dm-env)
      docker-machine env danake-manager
    ;;

    *)
        echo "danake-admin: command '$ADMIN_COMMAND' not recognized" >&2
        exit 1
esac
