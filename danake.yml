version: "3.8"
services:

  reverse-proxy:
    image: "127.0.0.1:5000/danake/reverse-proxy:${DANAKE_VERSION:-latest}"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
    ports:
      - target: 80
        published: 80
      - target: 443
        published: 443
    volumes:
      - type: bind
        source: "${DANAKE_DATA}/logs"
        target: /logs
      - type: bind
        source: "${DANAKE_CONFS}/cookie2ip.tsv"
        target: /cookie2ip.tsv
    networks:
      - backend_network
    secrets:
      - fullchain.pem
      - privkey.pem
      - dhparam.pem

  auth-app:
    image: "127.0.0.1:5000/danake/auth-app:${DANAKE_VERSION:-latest}"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
    volumes:
      - type: bind
        source: "${DANAKE_DATA}/pictures"
        target: /pictures
      - type: bind
        source: "${DANAKE_CONFS}/uid2info.tsv"
        target: /uid2info.tsv
      - type: bind
        source: "${DANAKE_CONFS}/uid2cookie.tsv"
        target: /uid2cookie.tsv
    networks:
      - backend_network
    secrets:
      - source: auth-config.py
        target: /config.py

  # code-server:
  #   image: "127.0.0.1:5000/danake/code-server:${DANAKE_VERSION:-latest}"
  #   deploy:
  #     mode: replicated
  #     replicas: "${DANAKE_UID_NUM}"
  #   networks:
  #     - code-server_network

networks:
  backend_network:
    driver: overlay
    attachable: true

secrets:
  fullchain.pem:
    file: "${DANAKE_CONFS}/certs/fullchain.pem"
  privkey.pem:
    file: "${DANAKE_CONFS}/certs/privkey.pem"
  dhparam.pem:
    file: "${DANAKE_CONFS}/certs/dhparam.pem"
  auth-config.py:
    file: "${DANAKE_CONFS}/auth-config.py"

